import React from 'react';
import type { Message } from '../types';

interface MessageBubbleProps {
  message: Message;
  onImageClick?: (url: string) => void;
}

const LoadingIndicator: React.FC = () => (
  <div className="flex items-center space-x-2">
    <div className="w-2 h-2 bg-blue-300 rounded-full animate-pulse [animation-delay:-0.3s]"></div>
    <div className="w-2 h-2 bg-blue-300 rounded-full animate-pulse [animation-delay:-0.15s]"></div>
    <div className="w-2 h-2 bg-blue-300 rounded-full animate-pulse"></div>
  </div>
);

const MessageBubble: React.FC<MessageBubbleProps> = ({ message, onImageClick }) => {
  const isUser = message.sender === 'user';
  const bubbleClasses = isUser
    ? 'bg-blue-600 text-white self-end'
    : 'bg-gray-700 text-gray-200 self-start';
  
  const containerClasses = `flex w-full ${isUser ? 'justify-end' : 'justify-start'}`;

  const renderContent = () => {
    if (message.isLoading) {
      return <LoadingIndicator />;
    }
    if (message.imageUrl) {
      return (
        <div className="p-2 bg-gray-800 rounded-lg">
           <button 
             onClick={() => onImageClick && onImageClick(message.imageUrl!)}
             className="block transition transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-800 rounded-md"
             aria-label="Ver imagen en tamaÃ±o completo"
            >
            <img 
              src={message.imageUrl} 
              alt="Generated by AI" 
              className="rounded-md max-w-sm md:max-w-md lg:max-w-lg shadow-lg" 
            />
           </button>
        </div>
      );
    }
    return <p className="whitespace-pre-wrap">{message.text}</p>;
  };

  return (
    <div className={containerClasses}>
      <div className={`max-w-xl lg:max-w-2xl px-4 py-3 rounded-2xl shadow-md ${bubbleClasses}`}>
        {renderContent()}
      </div>
    </div>
  );
};

export default MessageBubble;